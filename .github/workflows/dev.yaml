name: Deploy Staging
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Start build notfication
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          format: html
          message: |
            ⏳ <b>Dev Build started!</b> ${{ github.repository }}/${{ github.ref_name }}
            Workflow: ${{ github.workflow }}
            By: ${{ github.actor }}
            Commit: <a href="${{ github.event.head_commit.url }}">${{ github.event.head_commit.message }}</a>

      - name: actions/cache@v3
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: |
          yarn install

      - name: Start server
        run: |
          yarn dev & sleep 10

      - name: Run test
        run: |
          yarn test --verbose
          yarn test:e2e
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
          # Send a notification if the tests fail
          if: ${{ failure() }}
          run: |
            curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${TELEGRAM_TO} -d text="❌ Test failure in ${{ github.workflow }} on ${{ github.repository }}/${{ github.ref_name }} by ${{ github.actor }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "dcl-metrics-fe-stage"
          heroku_email: "jongwoo.park@code.berlin"

      - name: Finish build notfication
        uses: appleboy/telegram-action@master
        if: always()
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          format: html
          message: |
            ${{ job.status == 'success' && '✅ Dev Build Success!' || '❌ Dev Build Failed..' }}
            Live Site: <a href="https://dcl-metrics-fe-stage.herokuapp.com/">dcl-metrics-fe-stage.herokuapp.com</a>
